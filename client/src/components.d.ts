/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface App404 {}
  interface AppRoot {}
  interface FirebaseAuth {}
  interface MdcButton {
    'dense': boolean;
    'disabled': boolean;
    'href': string;
    'icon': boolean;
    'label': string;
    'outlined': boolean;
    'raised': boolean;
    'unelevated': boolean;
  }
  interface MdcChip {
    'icon': string;
    'text': string;
    'trailingIcon': string;
  }
  interface MdcDialog {
    'headerTitle': string;
    'log': () => Promise<void>;
    'open': () => Promise<void>;
  }
  interface MdcSelect {}
  interface MdcTextfield {
    'eid': string;
    'label': string;
    'maxWidth': string;
    'type': string;
    'value': string;
  }
  interface RaumTest {}
}

declare global {


  interface HTMLApp404Element extends Components.App404, HTMLStencilElement {}
  var HTMLApp404Element: {
    prototype: HTMLApp404Element;
    new (): HTMLApp404Element;
  };

  interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {}
  var HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };

  interface HTMLFirebaseAuthElement extends Components.FirebaseAuth, HTMLStencilElement {}
  var HTMLFirebaseAuthElement: {
    prototype: HTMLFirebaseAuthElement;
    new (): HTMLFirebaseAuthElement;
  };

  interface HTMLMdcButtonElement extends Components.MdcButton, HTMLStencilElement {}
  var HTMLMdcButtonElement: {
    prototype: HTMLMdcButtonElement;
    new (): HTMLMdcButtonElement;
  };

  interface HTMLMdcChipElement extends Components.MdcChip, HTMLStencilElement {}
  var HTMLMdcChipElement: {
    prototype: HTMLMdcChipElement;
    new (): HTMLMdcChipElement;
  };

  interface HTMLMdcDialogElement extends Components.MdcDialog, HTMLStencilElement {}
  var HTMLMdcDialogElement: {
    prototype: HTMLMdcDialogElement;
    new (): HTMLMdcDialogElement;
  };

  interface HTMLMdcSelectElement extends Components.MdcSelect, HTMLStencilElement {}
  var HTMLMdcSelectElement: {
    prototype: HTMLMdcSelectElement;
    new (): HTMLMdcSelectElement;
  };

  interface HTMLMdcTextfieldElement extends Components.MdcTextfield, HTMLStencilElement {}
  var HTMLMdcTextfieldElement: {
    prototype: HTMLMdcTextfieldElement;
    new (): HTMLMdcTextfieldElement;
  };

  interface HTMLRaumTestElement extends Components.RaumTest, HTMLStencilElement {}
  var HTMLRaumTestElement: {
    prototype: HTMLRaumTestElement;
    new (): HTMLRaumTestElement;
  };
  interface HTMLElementTagNameMap {
    'app-404': HTMLApp404Element;
    'app-root': HTMLAppRootElement;
    'firebase-auth': HTMLFirebaseAuthElement;
    'mdc-button': HTMLMdcButtonElement;
    'mdc-chip': HTMLMdcChipElement;
    'mdc-dialog': HTMLMdcDialogElement;
    'mdc-select': HTMLMdcSelectElement;
    'mdc-textfield': HTMLMdcTextfieldElement;
    'raum-test': HTMLRaumTestElement;
  }
}

declare namespace LocalJSX {
  interface App404 extends JSXBase.HTMLAttributes<HTMLApp404Element> {}
  interface AppRoot extends JSXBase.HTMLAttributes<HTMLAppRootElement> {}
  interface FirebaseAuth extends JSXBase.HTMLAttributes<HTMLFirebaseAuthElement> {}
  interface MdcButton extends JSXBase.HTMLAttributes<HTMLMdcButtonElement> {
    'dense'?: boolean;
    'disabled'?: boolean;
    'href'?: string;
    'icon'?: boolean;
    'label'?: string;
    'outlined'?: boolean;
    'raised'?: boolean;
    'unelevated'?: boolean;
  }
  interface MdcChip extends JSXBase.HTMLAttributes<HTMLMdcChipElement> {
    'icon'?: string;
    'onRemoval'?: (event: CustomEvent<any>) => void;
    'text'?: string;
    'trailingIcon'?: string;
  }
  interface MdcDialog extends JSXBase.HTMLAttributes<HTMLMdcDialogElement> {
    'headerTitle'?: string;
    'onDialogResult'?: (event: CustomEvent<any>) => void;
  }
  interface MdcSelect extends JSXBase.HTMLAttributes<HTMLMdcSelectElement> {}
  interface MdcTextfield extends JSXBase.HTMLAttributes<HTMLMdcTextfieldElement> {
    'eid'?: string;
    'label'?: string;
    'maxWidth'?: string;
    'type'?: string;
    'value'?: string;
  }
  interface RaumTest extends JSXBase.HTMLAttributes<HTMLRaumTestElement> {}

  interface IntrinsicElements {
    'app-404': App404;
    'app-root': AppRoot;
    'firebase-auth': FirebaseAuth;
    'mdc-button': MdcButton;
    'mdc-chip': MdcChip;
    'mdc-dialog': MdcDialog;
    'mdc-select': MdcSelect;
    'mdc-textfield': MdcTextfield;
    'raum-test': RaumTest;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


